AWSTemplateFormatVersion: "2010-09-09"
Description: Create FileNet Content Manager repos in ECR, download container images from IBM Production Entitlement Registry, and push to AWS ECR
Parameters:
  DockerRegistryEntitlementKey:
    Description: Entitlement Key from customer for Quick Start to pull docker images
    Type: String    
  IAMAPIKeyword:
    Type: String
    Description: Keyword specified by the enduser
  BastionHostRole:
    Type: String
    Description: IAM Role of Bastion Host
## Conditions ##
Conditions:
  # If the Entitlement Key entered by an IBMer, we need the keyword "iamapikey" keyword in front of the API Key in this format: "iamapikey:xxxxxxxxxxxxxx" (where xxxxxxxxxxxxxx is the API Key)
  IsIAMAPIKey: !Equals [ !Ref IAMAPIKeyword, "iamapikey"]    
Resources:
  CPERepo:
    Type: AWS::ECR::Repository
  CSSRepo:
    Type: AWS::ECR::Repository
  ICNRepo:
    Type: AWS::ECR::Repository
  CMISRepo:
    Type: AWS::ECR::Repository
  CRSRepo:
    Type: AWS::ECR::Repository

  # Creating ECR Policy
  CreateECRPolicy:
    Type: 'AWS::IAM::ManagedPolicy'
    Properties:
      Description: Policy for ECR
      Path: /
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Action: 'ecr:GetAuthorizationToken'
            Resource: '*'
          - Effect: Allow
            Action: 'ecr:BatchCheckLayerAvailability'
            Resource: '*'
          - Effect: Allow
            Action: 'ecr:GetDownloadUrlForLayer'
            Resource: '*'
          - Effect: Allow
            Action: 'ecr:GetRepositoryPolicy'
            Resource: '*'
          - Effect: Allow
            Action: 'ecr:DescribeRepositories'
            Resource: '*'
          - Effect: Allow
            Action: 'ecr:ListImages'
            Resource: '*'
          - Effect: Allow
            Action: 'ecr:DescribeImages'
            Resource: '*'
          - Effect: Allow
            Action: 'ecr:BatchGetImage'
            Resource: '*'
          - Effect: Allow
            Action: 'ecr:InitiateLayerUpload'
            Resource: '*'
          - Effect: Allow
            Action: 'ecr:UploadLayerPart'
            Resource: '*'
          - Effect: Allow
            Action: 'ecr:CompleteLayerUpload'
            Resource: '*'
          - Effect: Allow
            Action: 'ecr:PutImage'
            Resource: '*'
      Roles: [!Ref BastionHostRole]
  
Outputs:    
  CPEArn:
    Value: !GetAtt CPERepo.Arn
  CSSArn:
    Value: !GetAtt CSSRepo.Arn
  ICNArn:
    Value: !GetAtt ICNRepo.Arn
  CMISArn:
    Value: !GetAtt CMISRepo.Arn
  CRSArn:
    Value: !GetAtt CRSRepo.Arn
  CustomerLogin:
    Value: !Join
      - ' '
      - - 'login -u cp -p'
        - !Ref DockerRegistryEntitlementKey
        - 'cp.icr.io'
  IBMLogin:
    Condition: IsIAMAPIKey
    Value: !Join
      - ' '
      - - 'login -u iamapikey -p'
        - !Select ["1", !Split [":", !Ref DockerRegistryEntitlementKey]]
        - 'cp.icr.io'